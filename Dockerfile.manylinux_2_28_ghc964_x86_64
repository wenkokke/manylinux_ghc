# Build the container
# docker build --tag wenkokke/manylinux_2_28_ghc964_x86_64 --file Dockerfile.manylinux_2_28_ghc964_x86_64 .
FROM quay.io/pypa/manylinux_2_28_x86_64

# Link libgmp.so.10 to libgmp.so
RUN ln -s "/usr/lib64/libgmp.so.10" "/usr/lib64/libgmp.so"

# Link libtinfo.so.6 to libtinfo.so
RUN ln -s "/usr/lib64/libtinfo.so.6" "/usr/lib64/libtinfo.so"

# Install prerequisites
RUN yum install -y gmp-devel ncurses-devel

# Install GHC and Cabal
RUN <<EOT bash
set -ex

# Link python3.12 to python3
ln -s "/usr/local/bin/python3.12" "/usr/local/bin/python3"

# Install wget 3.2
python3 -m pip install wget==3.2

# Install GHC 9.4.8
python3 -c "import wget; wget.download('https://downloads.haskell.org/~ghc/9.4.8/ghc-9.4.8-x86_64-deb10-linux.tar.xz', '/tmp/ghc-9.4.8.tar.xz')"
python3 -c "import shutil; shutil.unpack_archive('/tmp/ghc-9.4.8.tar.xz', '/tmp')"
(mv "/tmp/ghc-9.4.8-x86_64-deb10-linux" "/tmp/ghc-9.4.8")
(cd "/tmp/ghc-9.4.8" && ./configure --prefix="/tmp/ghc-toolset-9.4.8/root/usr")
(cd "/tmp/ghc-9.4.8" && make install)
rm -rf "/tmp/ghc-9.4.8" "/tmp/ghc-9.4.8.tar.xz"

# Bootstrap Cabal 3.10.3.0
python3 -c "import wget; wget.download('https://github.com/haskell/cabal/archive/refs/tags/cabal-install-v3.10.3.0.zip', '/tmp/cabal.zip')"
python3 -c "import shutil; shutil.unpack_archive('/tmp/cabal.zip', '/tmp')"
mv "/tmp/cabal-cabal-install-v3.10.3.0" "/tmp/cabal"
(cd "/tmp/cabal" && python3 "./bootstrap/bootstrap.py" -d "./bootstrap/linux-9.4.8.json" -w "/tmp/ghc-toolset-9.4.8/root/usr/bin/ghc-9.4.8")
PATH="/tmp/ghc-toolset-9.4.8/root/usr/bin:${PATH}" "/tmp/cabal/_build/bin/cabal" v2-update
PATH="/tmp/ghc-toolset-9.4.8/root/usr/bin:${PATH}" "/tmp/cabal/_build/bin/cabal" v2-install cabal-install --overwrite-policy=always --install-method=copy --installdir="/tmp/ghc-toolset-9.4.8/root/usr/bin"

# Bootstrap GHC 9.6.4
python3 -c "import wget; wget.download('https://downloads.haskell.org/~ghc/9.6.4/ghc-9.6.4-src.tar.xz', '/tmp/ghc-9.6.4-src.tar.xz')"
python3 -c "import shutil; shutil.unpack_archive('/tmp/ghc-9.6.4-src.tar.xz', '/tmp')"

## Create and apply the fpic-default patch
mkdir "/tmp/ghc-9.6.4-patches"
cat > "/tmp/ghc-9.6.4-patches/fpic-default.patch" <<EOP
Index: ghc-9.6.4/compiler/GHC/Driver/Session.hs
===================================================================
--- ghc-9.6.4.orig/compiler/GHC/Driver/Session.hs
+++ ghc-9.6.4/compiler/GHC/Driver/Session.hs
@@ -3871,6 +3871,7 @@ default_PIC platform =
     -- of that.  Subsequently we expect all code on aarch64/linux (and macOS) to
     -- be built with -fPIC.
     (OSDarwin,  ArchAArch64) -> [Opt_PIC]
+    (OSLinux,   ArchX86_64)  -> [Opt_PIC]
     (OSLinux,   ArchAArch64) -> [Opt_PIC, Opt_ExternalDynamicRefs]
     (OSLinux,   ArchARM {})  -> [Opt_PIC, Opt_ExternalDynamicRefs]
     (OSOpenBSD, ArchX86_64)  -> [Opt_PIC] -- Due to PIE support in
EOP
(cd "/tmp" && patch -p0 < "/tmp/ghc-9.6.4-patches/fpic-default.patch")
rm -rf "/tmp/ghc-9.6.4-patches"

(cd "/tmp/ghc-9.6.4" && PATH="/tmp/ghc-toolset-9.4.8/root/usr/bin:${PATH}" ./configure GHC="/tmp/ghc-toolset-9.4.8/root/usr/bin/ghc-9.4.8")
(cd "/tmp/ghc-9.6.4" && PATH="/tmp/ghc-toolset-9.4.8/root/usr/bin:${PATH}" hadrian/build install --docs=none -j --prefix="/usr/local")
rm -rf "/tmp/ghc-toolset-9.4.8" "/tmp/ghc-9.6.4" "/tmp/ghc-9.6.4-src.tar.xz" "/tmp/ghc-9.6.4-patches"

# Unlink python3.12 from python3
unlink "/usr/local/bin/python3"

# Install Cabal 3.10.3.0
"/tmp/cabal/_build/bin/cabal" v2-install cabal-install --overwrite-policy=always --install-method=copy --installdir="/usr/local/bin"
rm -rf "/tmp/cabal" "/tmp/cabal.zip"
EOT
